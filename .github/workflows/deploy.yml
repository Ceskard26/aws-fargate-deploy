name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to AWS Fargate
    runs-on: ubuntu-latest

    steps:
      # ✅ 1. Clonar el código del repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # ✅ 2. Configurar credenciales de AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ✅ 3. Iniciar sesión en Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # ✅ 4. Construir la imagen Docker y etiquetarla
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/aws-fargate-app:latest .

      # ✅ 5. Subir la imagen a Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/aws-fargate-app:latest

      # ✅ 6. Actualizar el servicio en AWS Fargate con la nueva imagen
      - name: Update AWS Fargate Service
        run: |
          aws ecs update-service --cluster aws-fargate-cluster --service aws-fargate-service --force-new-deployment
